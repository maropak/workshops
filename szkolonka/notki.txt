1.
- puttygen - publiczny i prywatny generujê
- stash, konto, ssh, wklejam publiczny
- odpalam putty i ³¹cze sie bod ten link z ssh - user@server na port
- otwieram pageant i ³adujê klucz prywatny - musi byæ zawze otwarty
- mozna cos by go na start odpala³o
- has³o jak do domowego

mozna te¿ w bash
- ssh-keygen
Press <Enter> to accept the default location and file name. If the .ssh directory doesn't exist, the system creates one for you.
•Enter, and re-enter, a passphrase when prompted. 
- change directory to the .ssh directory, and copy the public key file(the one ending with .pub extension) contents to your Stash profile.(Manage Profile --> SSH Keys)

plik id_rsa
2.
files->new->module from existing sources
3.
powermock na testy statycznych
@RunWith(PowerMockRunner.class)
@PrepareForTest(MirrorlakeKafkaFactory.class)
4.
ImmutableMap.Builder()
5.
@VisibleForTesting co to ?
annotation to make a private method public only for test classes
6. beanchmarking JMH
7.
- repozytoria pluginów w maven
 </pluginRepository>
    </pluginRepositories>
8.
- namiar na nexusa rzeby wrzuca³o
   <distributionManagement>
        <repository>
9.
BOM jest super do depemdencji, dajemy nbp. jedn¹ na ca³ego springa i ju¿ nie trzeba w dependency ka¿dym
10 
gramarly do sprawdzania pisowani
11.
w³asna schema
http://blog.christianposta.com/activemq/easier-way-to-create-custom-spring-config-namespaces-using-xbean-spring/
- przy uzyciu tego, maven i plugin, beany z adnotacjami i sam definiuje schamê 
http://docs.spring.io/spring/docs/3.1.x/spring-framework-reference/html/extensible-xml.html#extensible-xml-introduction
- tu parser 
12.
esper
http://www.espertech.com/esper/quickstart.php
http://www.espertech.com/esper/tutorial.php
http://www.espertech.com/esper/solution_patterns.php
http://www.espertech.com/esper/release-5.2.0/esper-reference/html/examples.html
unidirectional joins
http://www.espertech.com/esper/release-5.3.0/esper-reference/html/epl_clauses.html
- przewarzanie w czasie, cos w czasie nastapi³y eventy/ mo¿e byæ iles razy w czasie...
http://www.espertech.com/esper/release-5.3.0/esper-reference/html/nwtable.html
- on select
http://www.espertech.com/esper/solution_patterns.php
13.
drools - message przychodzi, sa rule i jak wpadowane na message , to robione akcje jakieœ 
14.
publish-subscribe channel - code
http://www.waitingforcode.com/spring-integration/publish-subscribe-channels/rea
15.
STORM
https://www.tutorialspoint.com/apache_storm/index.htm
http://storm.apache.org/releases/current/Tutorial.html
16.
https://www.thoughtworks.com/radar/languages-and-frameworks
17.
redis-desktop-manager-0.8.8.384
18.
spel z java

Map<String, String> inner = new HashMap<>();
        inner.put("b", "c");
        inner.put("d", "e");
        Map<String, Object> outer = new HashMap<>();
        outer.put("a", inner);

        ExpressionParser parser = new SpelExpressionParser();
        Expression expression = parser.parseExpression("#payload['a']['b'] == 'c' && #payload['a']['d'] == 'e'");
        EvaluationContext context = new StandardEvaluationContext();
        context.setVariable("payload", outer);
        Boolean message = expression.getValue(context, Boolean.class);
        int x = 5;
		
19.
<int:recipient-list-router id="customRouter" input-channel="routingChannel">
20.
/usr/bin/redis-commander

redis-commander --redis-port 6982 --redis-host etclnx31u.nam.nsroot.net --redis-password hophop123 --port 1221

https://redislabs.com/blog/so-youre-looking-for-the-redis-gui/

tworzy w domowym .redis-commander, 3a wyrzucic by na innym odpalic 

https://github.com/joeferner/redis-commander
http://www.digitalwhores.net/ubuntu-2/redis-commander-how-to-install-on-utuntu-14-04-lts/
https://www.npmjs.com/package/redis-commander
21.
 <server>
	<id>xxx</id>
	<username>aaa</username>
	<password>bbb</password>
</server> 
		
<distributionManagement>
    <repository>
        <id>xxxx</id>
        <url>http://url</url>
    </repository>
    <snapshotRepository>
        <id>yyy</id>
        <url>http://url2</url>
    </snapshotRepository>
</distributionManagement>  
22.
UML
graf
diagram
https://yuml.me/diagram/class/draw
[Customer]->[SmartService]
[Customer]-[note:fill smart entity by request with checks inside and based on etrading entity {bg:wheat}]
[SmartService]->[DataProvider]
[SmartService]-[note:based on checks takes required fields which are not filled in smart entity then take required fields for given field for cache execution{bg:wheat}]
[DataProvider]-[note:get field by entity name and id and conditions {bg:wheat}]
[DataProvider]->[Cache]
[Cache]-[note:return entities by id and entity name {bg:wheat}]

[Customer]->[SmartService]
[Customer]-[note:call check on SmartService {bg:wheat}]
[SmartService]->[Converter]
[SmartService]-[note:take enriched smart entity or smart response by smart request and common data model{bg:wheat}]
[Converter]->[DataProvider]
[Converter]-[convert common data model to etrading entity{bg:wheat}]
[DataProvider]-[note:get field by entity name and id and conditions {bg:wheat}]
[DataProvider]->[Cache]
[Cache]-[note:return entities by id and entity name {bg:wheat}]

[1. Converter]->[2. Take required fields for request checks based on configuration]
[1. Converter]-[convert common data model to Etrading Entity{bg:wheat}]
[2. Take required fields for request checks based on configuration]-[note: list of fields not filled in Entity{bg:wheat}]
[2. Take required fields for request checks based on configuration]->[3. fill fields using cache and configuration]
[3. fill fields using cache and configuration]-[note:in configuration info what will be taken from cache and how {bg:wheat}]
[3. fill fields using cache and configuration]->[4. call SMART engine]
[4. call SMART engine]-[note: SMART based on Smart Request and filled Entity return Smart Response{bg:wheat}]
23.
redis-commander 
Redis web-based management tool written in node.js

https://www.npmjs.com/package/redis-commander

http://www.digitalwhores.net/ubuntu-2/redis-commander-how-to-install-on-utuntu-14-04-lts/
24.
przydatne narzedzia
http://blog.takipi.com/15-tools-to-use-when-deploying-code-to-production/?utm_source=blog&utm_medium=post-footer&utm_content=jshell&utm_campaign=java
25.
view->presentationMode
alt+1
26.
akka
http://doc.akka.io/docs/akka/current/intro/what-is-akka.html
27.
protobuf
https://developers.google.com/protocol-buffers/docs/javatutorial
https://developers.google.com/protocol-buffers/docs/reference/java-generated
28.
grep -r "data_emct" .
sed -i 's/data_index/data_emct/g' tibemsd.conf
29
SPOCK
- ulepszone mockowanie (Stub), rozne zwracana kolejne wywolania, od warunkow argumentow, wyjatki
http://thejavatar.com/testing-with-spock/

given:
        UserService service = Stub()
        service.save({ User user -> 'Michael' == user.name }) >> {
            throw new IllegalArgumentException("We don't want you here, Micheal!")
        }
 
    when:
        User user = new User(name: 'Michael')
        service.save(user)
    then:
        thrown(IllegalArgumentException)
    
    when:
        User user2 = new User(name: 'Lucas')
        service.save(user2)
    then:
        notThrown(IllegalArgumentException)
		
- Arguments matching wildcards
- tu Stub definiuje zachowanie podczas wywolania
- do sprawdzenia czy/ile razy metoda byla wywolana jest Mock lub spy	
----
// should not be invoked at all
    0 * list.size()
 
    // should be invoked at least one time
    (1.._) * list.size()
 
    // should be invoked at most one time
    (_..1) * list.size()
 
    // any number of calls
    _ * list.size()
----
- Check the order of execution - then then then...
- spy nie jest dummy, to wraper na obiekt, moze nadpisywac operacje i mozemy sprawdzac wywolania 

na koncu testu set danych i rezultaty do sprawdzenia , z lewym wywolana metoda, prawe to rezultat
where:
		aTestUrl | valid
		"http://www.google.com" | true
		"file://home/users"| true
		"http://localhost:8080/" | false
		
w where moga byc argumenty do metod, a test moze byc w then i argumenty jednym | a resulty po || 
- zmienne w klasie sa odswierzane przed kazdym testem, ale mozna wspoldzielic zmiany na zmiennej - @Shared
- nie ma gwarancji kolejnosci metod, mozna gdy nad klasa @Stepwise
------------------------------------
20.
spring 5 web
https://spring.io/blog/2016/09/22/new-in-spring-5-functional-web-framework
curl -v 'http://localhost:8080/person'
curl -v 'http://localhost:8080/person/1'
curl -d '{"name":"Jack Doe","age":"16"}' -H 'Content-Type: application/json' -v 'http://localhost:8080/person'
21.
http://tibcoadmin.com/tibco/ems/what-is-tibco-ems/
https://docs.tibco.com/pub/ems/8.3.0/doc/pdf/TIB_ems_8.3_users_guide.pdf
22.
- spring integration - integration graph
23.
ps aux | less
24.
https://www.tutorialspoint.com/mongodb/mongodb_overview.htm
https://spring.io/guides/gs/accessing-data-mongodb/
http://www.baeldung.com/spring-data-mongodb-tutorial
https://examples.javacodegeeks.com/enterprise-java/spring/spring-data-mongodb-example/
http://mongodb.github.io/mongo-java-driver/3.4/driver/getting-started/quick-start/
25.
redis desctop manager
26.
- junit 4 i 5 maja testy parametryzowane,
- w 5 mozna w osobnej metodzie podac
@MethodSource(names = "dataOtherValues")
static Stream dataOtherValues() {
       return Stream.of(2, 8, 11);
27.
https://koziolekweb.pl/
28.
- guava joiner , String tez ma 
29
http://blog.jhades.org/how-does-spring-transactional-really-work/
30
redis
https://redis.io/topics/sentinel
https://redis.io/topics/security
https://redis.io/topics/persistence
31.
https://www.tutorialspoint.com/lucene/lucene_first_application.htm
32.
Angular 4 Firebase - narzedzia dla lepszych webowek
33.
dev porady i stronki
https://github.com/sdmg15/Best-websites-a-programmer-should-visit
34.
tibco publish
https://stackoverflow.com/questions/23650060/how-to-publish-messages-to-ems-topic-using-java
35.
mvn dependency:tree
36.
mvn clean test -Dtest=com.citi.smartetrading.RequestTest
37.
jxpath
https://commons.apache.org/proper/commons-jxpath/users-guide.html
String fieldJXPath = fields[1] + "/p[@n = '" + fields[fields.length - 1] + "']/value";
JXPathContext context = JXPathContext.newContext(entity);
String value = (String)context.getValue(fieldJXPath);
38.
redis-cli -h etclnx32 -p 16385 -a hophop123
redis-cli -h etclnx34 -p 16384 -a hophop123
redis-cli -h etclnx34 -p 16383 -a hophop123

sentinel get-master-addr-by-name redis-cluster-emct
----------------
logi 
https://logback.qos.ch/manual/jmxConfig.html
39.
czy port wolny
netstat -antu | grep '6386\|6387\|6388'
40.
git branch -D stp_components_BO
git push origin --delete stp_components_BO
41.
spark java rest
@BeforeClass
    public static void setup() {
//        Spark.get("/hello", (request, response) -> "Hello World");
        Spark.post("/publish",  (request, response) -> {
            return request.body();
        });
    }
http://sparkjava.com/
42.
import org.springframework.expression.EvaluationException;
import org.springframework.expression.ExpressionParser;
import org.springframework.expression.spel.standard.SpelExpressionParser;
org.springframework.expression.spel.support.StandardEvaluationContext;

ExpressionParser parser = new SpelExpressionParser();
Expression ex = parser.parseExpression("payload['columnFirst'] == 'abc'")
StandardEvaluationContext messageContext = new StandardEvaluationContext(message);
ex.getValue(messageContext, Boolean.class)
43.
https://springframework.guru/spring-framework-annotations/
44.
 GetTableNames getTableNames = new GetTableNames();
        try {
            Object o = JdbcUtils.extractDatabaseMetaData(simpleJdbcCall.getJdbcTemplate().getDataSource(), getTableNames);
            System.out.println(o);
        } catch (MetaDataAccessException e) {
            System.out.println(e);
        }
		
 class GetTableNames implements DatabaseMetaDataCallback {

        public Object processMetaData(DatabaseMetaData dbmd) throws SQLException {
            ResultSet rs = dbmd.getProcedureColumns(null, null, "TEST_PROCEDURE7", null);
            ArrayList l = new ArrayList();
            while (rs.next()) {
                l.add(rs.getString(3));
            }
            return l;
        }
    }
45.
implements ApplicationContextAware, SmartInitializingSingleton
46. 
proxy 
a) 
pobieram cntlm i rozpakowywuje
b) 
edytuje plik - cntlm.ini

Username	ml03602
Domain		EUR
Password	xxx

Proxy		webproxy.ssmb.com:8080
c)
odpalam z katalogu
cntlm.exe -c cntlm.ini
cntlm.exe -c cntlm.ini -v  - daje logi 
d) 
zmieniam w settings maven lub dodaje
<proxy>
            <active>true</active>
            <protocol>http</protocol>
            <host>127.0.0.1</host>
            <port>3128</port>
        </proxy>
e)
w intellij settings proxy ustawiam
127.0.0.1
3128
47.
GET URL
git remote show origin
git config --get remote.origin.url
48.
git diff --shortstat f8ac25f2164a23ce2f3945b7a4fe7cdb5c073a1d 52da51f93d69d7ab7e33c6961d0ae37cf7448643
49.
git push --set-upstream origin metrics_depends_on
50.
java -jar target/password-client-test-0.0.1-SNAPSHOT.jar
51.
https://stackify.com/java-performance-tools-8-types-tools-need-know/
52.
http://developer.lightbend.com/guides/akka-quickstart-java
53.
- spring boot dev tools, po build podmienia pliki i startuje serwer
- mozna makro co robi build na ctrl+s 
54.
logi
http://www.loggly.com/ultimate-guide/java-logging-basics/ 
55.
- dodanie nowego proxy pod adminem
- pod public przeniesienie do grupy tego co sie pojawil 
56.
images z zewnatrz
set ftp_proxy=http://webproxy.ssmb.com:8080
set http_proxy=http://webproxy.ssmb.com:8080
set https_proxy=http://webproxy.ssmb.com:8080
 
 
C:\Python27\python.exe dpul.py -i hazelcast/hazelcast:3.7.5
Then copy to cloud server with Docker and do
docker load -i hazelcast_hazelcast_3_7_5.tar.gz
57.
exception to file
StringWriter sw = new StringWriter();
                PrintWriter pw = new PrintWriter(sw);
                e.printStackTrace(pw);
                Path path = Paths.get("C:/git_commit_scripts/tmp.txt");
                try (BufferedWriter writer = Files.newBufferedWriter(path))
                {
                    writer.write(sw.toString());
                } catch (IOException ex) {
                    e.printStackTrace();
                }
58.
linux system
uname -a
59.
https://www.javacodegeeks.com/category/java/enterprise-java/
https://www.javacodegeeks.com/category/java/desktop-java/
60.
odpalenie sonara na merkury
mvn clean install
mvn sonar:sonar https://ML03602@cedt-icg-bitbucket.nam.nsroot.net/bitbucket/scm/ecomer/mercury-framework.git
- zagadac z algo o namiar na scm
	<scm>
		<developerConnection>scm:git:git@cedt-icg-bitbucketcli.nam.nsroot.net:7999/ecomer/mercury-framework.git</developerConnection>
	</scm>
61.
config :

@Component
@PropertySource("classpath:configuration.properties")
@ConfigurationProperties("passwordgetter.dev")
public class DevRedissonObjectGetter extends RedissonObjectGetter {
}
62.
Nowy user linux
useradd -m Martyna
passwd Martyna
groups
 usermod -g root Martyna
 visudo - dodanie

sudo htpasswd /etc/origin/htpasswd $Martyna 
63.
db visualiser - bouncycastle 
https://support.dbvis.com/support/solutions/articles/1000231934-sybase-ase-how-to-enable-password-encryption
64.
https://kafka.apache.org/quickstart 
bin\windows\zookeeper-server-start.bat config\zookeeper.properties
bin\windows\kafka-server-start.bat config\server.properties
bin\windows\kafka-topics.bat --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test
bin\windows\kafka-topics.bat --list --zookeeper localhost:2181

bin\windows\kafka-console-producer.bat --broker-list localhost:9092 --topic test
bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic test --from-beginning
65.
C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.3\bin\idea64.exe.vmoptions
-Xmx8G
65.
BOOT
- konfigi w tescie 
@SpringBootTest({ "auto.startup=false", "feed.file.name=Test" })
- @SpringBootApplication
@ImportResource("/hello/integration.xml")
public class Application {
66.
RUNNER
@SpringBootApplication
public class Application {
	public static void main(String[] args) {
		SpringApplication.run(Application.class);
	}
	@Bean
	public CommandLineRunner demo(CustomerRepository repository) {}
67.
https://spring.io/guides
68.
metoda w osobnym watku - async
@Async
public CompletableFuture<User> findUser(String user) throws InterruptedException {
- zwraca CompletableFuture
- mozna w niej sync rest template
- trzeba jeszcze wlaczyc @EnableAsync
- mozna dodac executor jak duzo watkow dla tego/kolejka, z default SimpleAsyncTaskExecutor - nowy watek dla kazdego 
- mozna poczekaz az wszystkie skonczy !!!!!!!!!!!!! - CompletableFuture<User> page3 = gitHubLookupService.findUser("Spring-Projects");
// Wait until they are all done
        CompletableFuture.allOf(page1,page2,page3).join();
69.
websocket
- otwiera kanal i laczy sie, potem przez niego komunikacja w 2 strony
https://spring.io/guides/gs/messaging-stomp-websocket/
70.
przy rejestrowaniu serwisow jak w eureka
https://spring.io/guides/gs/service-registration-and-discovery/
pytamy klienta jakie sa instancje serwisu i do niego mozemy uderzac, np. do odpowiedniej wersji/load balancing 
71.
https://spring.io/guides/gs/routing-and-filtering/
mozna routin i filtering z netflix, dodatkowa opcja load balance z eureka
uderzamy do apki i docelowej name, a ona jako proxy robi
- dodatkowo filtry, przed/po/na ex rutowanie - rozszerzenie ZuulFilter - metody typ,order,kiedy wywolany i co robione
teraz uderzamy do docelowego przez name - localhost:8080/name/uri
72.
test web - z odpaleniem serwera i bez,
testowanie statusu, co zwrocone 
https://spring.io/guides/gs/testing-web/
73.
circut braker - netflix-hystrix
jak serwis pada to sie spodziewa - robi ina akcje
- na serwisach i komponentach proxy na metody oznaczone @HystrixCommand
jak blad na wywolaniu to fallback metoda idzie
 @HystrixCommand(fallbackMethod = "reliable")
- jeszcze standardowe wlaczenie 
74.
public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @Override
    public void run(String... strings) throws Exception {
75.
vault support
https://spring.io/guides/gs/accessing-vault/
76.
kafka
https://kafka.apache.org/quickstart

http://strimzi.io/
77.
openshift
https://learn.openshift.com/
78.
git auth
http://www.codeaffine.com/2014/12/09/jgit-authentication/
79.
DOCKER BEZ ROOT
Z poziomu roota trzeba zmienic dostep do socketa:
chown root:dockerroot /var/run/docker.sock
I dodac siebie do groupy dockerroot:
sudo usermod –aG dockerroot Marek
80.
json to class
https://app.quicktype.io/
81.
Lambda string
https://github.com/greenjoe/lambdaFromString
82.
- impress JS
83.
Redis na OS bez backend
args:
            - '--save ""' 
84.
programy
- regedit
HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Tanium\Tanium Client\Sensor Data\Applications
85.
- exclude scan 
@ComponentScan(basePackages = "com.citi", excludeFilters = @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, classes = {Inlet.class, Outlet.class}))
86.
https://mobaxterm.mobatek.net/
87.
intellij idea java version
https://intellij-support.jetbrains.com/hc/en-us/articles/206544879-Selecting-the-JDK-version-the-IDE-will-run-under
https://intellij-support.jetbrains.com/hc/en-us/community/posts/206895105-How-does-IntelliJ-determine-which-version-of-Java-to-run-under-
https://stackoverflow.com/questions/22489398/unsupported-major-minor-version-52-0
88.
bez fat jar
- wyrzucam spring boot maven plugin i daje swoj np. 

<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.citi.innovation.ECSlambda.Application</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			
albo assembly 

<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptor>src/assembly/assembly.xml</descriptor>
					<finalName>spring-boot-app</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<attach>false</attach>
				</configuration>
				<executions>
					<execution>
						<id>create-app-directory</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
89.
bean w testach 
a) mozna exclude
@ComponentScan(basePackages = "com.citi", excludeFilters = @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, classes = {NatsInlet.class, NatsOutlet.class}))
b) mozna nazwac bean i nazwa metoda ktora pobiera mock co nadpisuje taka sama 
@TestConfiguration
public class MockConfiguration {

    @Bean
    @Primary
    public Inlet inlet() {
        return mock(Inlet.class);
    }
-----	
@SpringBootTest(classes = { Application.class, MockConfiguration.class, FlowWithInMemoryTest.TestConfig.class })
public class FlowWithInMemoryTest {

    @Autowired
    private PayloadProcessor payloadProcessor;

    @TestConfiguration
    public static class TestConfig {

        @Bean
        @Primary
        public FlowConfigRepository flowConfigRepository() {
            return new InMemoryFlowConfigRepository();
        }

    }
90.
Metrics
a) application
# endpoints

management.endpoints.web.exposure.include=health,info,prometheus,metrics

# metrics
management.metrics.web.server.auto-time-requests=true
b)
- aspect timed z - import io.micrometer.core.aop.TimedAspect;
@Configuration
@EnableAspectJAutoProxy
public class AutoTimingConfiguration {
    @Bean
    public TimedAspect timedAspect(MeterRegistry registry) {
        return new TimedAspect(registry);
    }
}
c)
 @Timed("app")
 na metodzie
d)
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>1.0.1</version>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>1.0.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>		
91.
logi poziomy w application.properties
logging.level.root=INFO
logging.level.com.citi=WARN
logging.level.io.nats=WARN
92.
Na refresh context event
@EventListener
    public void initializeNatsInlet(ContextRefreshedEvent event) {
93.
@SpringBootApplication(exclude = { MongoAutoConfiguration.class, MongoDataAutoConfiguration.class})
94.
enable profile do application-hazelcastDev.properties
95.
wstrzykiwanie siebie dla uzycia @Async
    @Autowired
    @Lazy
    private AsyncMessageProcessor self;
- potrzebny interface
96.
config dla executora, default to taskExecutor()

@EnableAsync
@Configuration
public class AsyncConfiguration {

    // default task executor
    @Bean
    @ConfigurationProperties(prefix = "executor.default")
    public Executor taskExecutor() {
        return new ThreadPoolTaskExecutor();
    }
97.
	general settings
	build
	build steps, klikam maven
	znajduje artifactory
	maven-icg-team-dev-local
	proj template musi byc - Build and deploy to EAR
	albo recznie 
	https://cedt-confluence.nam.nsroot.net/confluence/display/31084/Artifactory+-+Maven
98.
properties do listy
mongo.servers[0].host=maas-gt-d6-u0012.nam.nsroot.net
mongo.servers[0].port=37017
mongo.servers[1].host=maas-mw-d6-u0032.nam.nsroot.net
mongo.servers[1].port=37017
mongo.servers[2].host=maas-sw-d6-u0015.nam.nsroot.net
mongo.servers[2].port=37017

mapowanie na
public static class MongoServer{
        private String host;
        private int port;
99.
parent
 <groupId>com.citi.innovation</groupId>
    <artifactId>ecs-lambda-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>ECS parent</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<modules>
		<module>ecs-lambda-runner</module>
		<module>ecs-lambda-config</module>
	</modules>
child
	<parent>
		<groupId>com.citi.innovation</groupId>
		<artifactId>ecs-lambda-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>ecs-lambda-runner</artifactId>
	<packaging>jar</packaging>

	<name>ECSlambda</name>
100.
executor gdy zapcha kolejke
executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());
101.
https://www.jdoodle.com/c-online-compiler
executor jezykow , compiler
102.
ehcache
https://dzone.com/articles/spring-hibernate-ehcache-caching
103.
tokeny
jwt
https://jwt.io/
104.
ComponentScan(basePackageClasses = Application.class,
               excludeFilters = @Filter(type = FilterType.REGEX, pattern = "com\\.citi\\.innovation\\.ecslambda\\.runner\\.nats\\..*"))
105.
filter 
a) @ServletComponentScan(basePackageClasses = QuicksilverAuthorizationFilterOld.class)
b) 
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
c)
@WebFilter("/api/quicksilver/*")
@Order(1)
public class QuicksilverAuthorizationFilterOld implements Filter {
106.
multiple truststore
https://stackoverflow.com/questions/7591281/setting-multiple-truststore-on-the-same-jvm
107.
assertThat (result) .hasSize(5)
                .containsEntry("c", "bbb")
                .containsEntry("d", "e")
                .containsEntry("f", "aaa")
                .containsEntry("g", "xxx");
				
import static org.assertj.core.api.Assertions.assertThatExceptionOfType;

        assertThatExceptionOfType(EcsLambdaException.class)
                .isThrownBy(() -> lambdaFunctionService.getFunction(adhocConfig))
                .withNoCause()
                .withMessage("There is no function with name functionName");
108.
- uzycie war przy konstrukcjach i dokladnych przypisaniach
-- nie przy zwracaniu wartosci z funkcji 
- to nie keyword, var var jest OK
- nie dla lambda
- jak var x = new Arraylist<>(), to x jest List<Object>
- tylko local, nie return, method maram, cach block, field
- nie var x = {1,2,3} trzeba = new int [] {1,2,3}
- nie var x = null;
- dla var list = List.of(1, "2"), znajdzie najblizszy syper czyli List<? extends Servializable & Comparable<>>
---
query java kontenera, nie OS
attach to java process 
109.
List.copyOf
110.
SSL
https://www.thomasvitale.com/https-spring-boot-ssl-certificate/
https://drissamri.be/blog/java/enable-https-in-spring-boot/
mmc
111.
- JWT
https://www.baeldung.com/java-json-web-tokens-jjwt
https://jwt.io/
112.
- dependencies dla podmodulow, w root
  <dependencyManagement>
    <dependencies>
      <dependency>
113.
 docker run -it docker-icg-int-local.artifactrepository.citigroup.net/msst-etrading-162632/ecslambdaconfig:189 /bin/bash
- od razu bash odpala, i mozna sprawdzic, w nim odpalam skrytp i widze, ze kodowanie zle , ma byc linixowe LF
114.
java -Xms$MAX_MEM -Xmx$MAX_MEM 
115.
- skrypt bierze memory z poda
CONTAINER_MAX_MEMORY=`cat /sys/fs/cgroup/memory/memory.limit_in_bytes`
getmem()
{
if [ "x$CONTAINER_MAX_MEMORY" != x ]; then
     local max_mem="${CONTAINER_MAX_MEMORY}"
     local ratio=${JAVA_MAX_MEM_RATIO:-70}
     local mx=$(echo "${max_mem} ${ratio} 1048576" | awk '{printf "%d\n" , ($1*$2)/(100*$3) + 0.5}')
     MAX_MEM="${mx}m"
fi

}
getmem
echo $MAX_MEM
ustawiamy na pod w edit resource
116.
<artifactId>assertj-core</artifactId>
117.
assembly
https://maven.apache.org/plugins/maven-assembly-plugin/usage.html
118.
@Requires({ System.getenv('run.external') == 'true' })
119.
limit pamieci
         resources:
            limits:
               memory: ${MEMORY}
            requests:
               memory: ${MEMORY}
120.
may mongo db
http://blog.marcosbarbero.com/multiple-mongodb-connectors-in-spring-boot/
121.
jwt spring security
https://auth0.com/blog/implementing-jwt-authentication-on-spring-boot/
122.
forward :
0.
ustawiam przy starce aplikacji port 
"/opt/jre/latest/scripts/startjava.sh -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8787 ${keystoreArgs} -jar ${jar}
1.
mam remote w intellij
- edit configuration
- remote - + w prawym gornym
- zmieniam tylko na port co wystawiony -  np. 8787 jak na tym slucha apka :
2. 
loguje sie i forward
oc login https://namosegtd03d-webapi.nam.nsroot.net:8443
oc port-forward ecslambda-runner-3-6jscp 8787:8787
123.
cmder - nakladka na konsole
http://cmder.net/
123.
Optional.map(Node::getId)
    .orElse(null);
- optional ma mapowanie !
124.
lombok
@Builder(toBuilder = true)
mozna na koppi starej wiadomosci
metadata.toBuilder()
                .fullStepId(newStepId)
                .uuid(newMessageId)
                .addStepToMessageTrace(metadata.getFullStepId().getStepId())
                .build();
gdzie aa to dodanie do singular kolekcji
    @Singular("addStepToMessageTrace")
    private final List<String> messageTrace;
125.
lombok.config
lombok.anyConstructor.suppressConstructorProperties=true
lombok.nonNull.exceptionType = IllegalArgumentException
lombok.log.fieldName = LOG
config.stopBubbling = true
126.
w parent
 </dependencies>
    </dependencyManagement>
- to w child nie musi wersji podawac 
127.
redux dev tools 
128.
w intellij pod proj
.editorconfig
end_of_line = lf
129.
GC w java 10 
 -XX pararelGCThreads
- w 10 tez szybszy start JVM i shared classed, jak apki wspoldziela
- mozna wlaczyc by listowalo pliki na starcie 
- wykrywa kontener, podlacza sie do jego procesow zamiast hosta
- querujemy tez kontener, mozna -xx ustawiac na kontenerowe
 130.
 SPARK
 http://sparkjava.com/documentation#halting
 130.
 configmap, podmiana url, ngnx
         location /api {
          rewrite /api/(.*) /$1 break;
          proxy_pass http://shodan-backend-service:4567;
        }